syntax = "proto3";
package blarsy.truststore.truststore;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "truststore/params.proto";
import "truststore/attestation.proto";
import "truststore/identifier_type.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/blarsy/truststore/x/truststore/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/blarsy/truststore/truststore/params";
  }
  // Queries a Attestation by index.
	rpc Attestation(QueryGetAttestationRequest) returns (QueryGetAttestationResponse) {
		option (google.api.http).get = "/blarsy/truststore/truststore/attestation/{index}";
	}

	// Queries a list of Attestation items.
	rpc AttestationAll(QueryAllAttestationRequest) returns (QueryAllAttestationResponse) {
		option (google.api.http).get = "/blarsy/truststore/truststore/attestation";
	}

// Queries a IdentifierType by index.
	rpc IdentifierType(QueryGetIdentifierTypeRequest) returns (QueryGetIdentifierTypeResponse) {
		option (google.api.http).get = "/blarsy/truststore/truststore/identifier_type/{index}";
	}

	// Queries a list of IdentifierType items.
	rpc IdentifierTypeAll(QueryAllIdentifierTypeRequest) returns (QueryAllIdentifierTypeResponse) {
		option (google.api.http).get = "/blarsy/truststore/truststore/identifier_type";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAttestationRequest {
	  string index = 1;

}

message QueryGetAttestationResponse {
	Attestation attestation = 1 [(gogoproto.nullable) = false];
}

message QueryAllAttestationRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAttestationResponse {
	repeated Attestation attestation = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetIdentifierTypeRequest {
	  string index = 1;

}

message QueryGetIdentifierTypeResponse {
	IdentifierType identifierType = 1 [(gogoproto.nullable) = false];
}

message QueryAllIdentifierTypeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIdentifierTypeResponse {
	repeated IdentifierType identifierType = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
